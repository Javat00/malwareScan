import tkinter as tk
from tkinter import filedialog, messagebox
import requests


class MainWindow(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.master.title("VirusTAPP")

        # Configurar el tamaño y el color de fondo de la ventana principal
        self.master.geometry("400x200")
        self.master.configure(bg="#f0f0f0")

        # Crear una etiqueta para el título de la ventana
        self.title_label = tk.Label(self.master, text="Escaneo Malware", font=("Arial", 24), bg="#f0f0f0")

        # Colocar la etiqueta en la parte superior de la ventana
        self.title_label.pack(side="top", fill="x", pady=10)

        # Crear un botón "Abrir archivo" en la ventana principal
        self.open_button = tk.Button(self.master, text="Abrir archivo", command=self.open_file, font=("Arial", 14))

        # Colocar el botón en el centro de la ventana
        self.open_button.pack(pady=20)

        # Crear un botón "Salir" en la ventana principal
        self.quit_button = tk.Button(self.master, text="Salir", command=self.master.destroy, font=("Arial", 14))

        # Colocar el botón en la parte inferior de la ventana
        self.quit_button.pack(side="bottom", pady=20)

    def open_file(self):
        # Mostrar el diálogo de selección de archivo
        filetypes = (("Archivos ejecutables", "*.exe"), ("Todos los archivos", "*.*"))
        filepath = filedialog.askopenfilename(filetypes=filetypes)

        # Verificar si se seleccionó un archivo
        if filepath:
            # Abrir el archivo seleccionado y mostrar su contenido en la consola
            with open(filepath, "rb") as f:
                content = f.read()
            print(f"Archivo seleccionado: {filepath}")
            #descomentar si queremos ver el contenido del fichero
            #print(f"Contenido del archivo:\n{content}")

            # Analizar el archivo seleccionado en VirusTotal, reemplazar con API propia
            api_key = "YOUR_API_KEY"
            url = "https://www.virustotal.com/vtapi/v2/file/scan"
            params = {"apikey": api_key}
            files = {"file": (filepath, content)}
            response = requests.post(url, files=files, params=params)

            # Verificar si se recibió una respuesta válida de VirusTotal
            if response.status_code == 200:
                response_json = response.json()
                resource = response_json["resource"]
                print(f"Archivo enviado a VirusTotal. ID de análisis: {resource}")

                # Obtener el resultado del análisis de VirusTotal
                url = "https://www.virustotal.com/vtapi/v2/file/report"
                params = {"apikey": api_key, "resource": resource}
                response = requests.get(url, params=params)

                # Verificar si se recibió una respuesta válida de VirusTotal
                if response.status_code == 200:
                    response_json = response.json()
                    positives = response_json["positives"]
                    total = response_json["total"]
                    if positives > 0:
                        result = f"El archivo {filepath} ha sido identificado como malware.\n"
                        result += f"{positives} de {total} motores antivirus detectaron una amenaza."
                    else:
                        result = f"El archivo {filepath} no ha sido identificado como malware.\n"
                        result += f"Ningún motor antivirus detectó una amenaza."
                    # Mostrar el resultado del análisis en una ventana de diálogo
                    messagebox.showinfo(title="Resultado del análisis", message=result)
                else:
                    print("No se pudo obtener el resultado del análisis de VirusTotal.")
            else:
                print("No se pudo analizar el archivo en VirusTotal.")
        else:
            print("No se seleccionó ningún archivo.")


if __name__ == '__main__':
    root = tk.Tk()
    app = MainWindow(master=root)
    app.mainloop()
